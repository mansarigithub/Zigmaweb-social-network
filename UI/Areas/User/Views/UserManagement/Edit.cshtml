@model ZigmaWeb.UI.Areas.User.Models.UserManagement.EditUserViewModel
@using ZigmaWeb.Model.Entity.ZwCore;
@using Common.Globalization;
@using ZigmaWeb.Model.Enum;
@using ZigmaWeb.UI;
@{
}

@section styles {
}

@using (Html.BeginForm("Edit", "UserManagement", FormMethod.Post, new { id = "form", @class = "form-horizontal" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(e => e.UserId)

    <div class="form-group">
        <div class="col-sm-9">
            @Html.TextBoxFor(e => e.Email, new { type = "email", @class = "form-control text-left" })
            @Html.ValidationMessageFor(e => e.Email)
        </div>
        <label for="Email" class="col-sm-3 control-label">ایمیل</label>
    </div>
    <div class="form-group">
        <div class="col-sm-9">
            @Html.TextBoxFor(e => e.LastName, new { type = "text", @class = "form-control" })
            @Html.ValidationMessageFor(e => e.LastName)
        </div>
        <label for="LastName" class="col-sm-3 control-label">نام خانوادگی</label>
    </div>

    <div class="form-group">
        <div class="col-sm-9">
            @Html.TextBoxFor(e => e.FirstName, new { type = "text", @class = "form-control" })
            @Html.ValidationMessageFor(e => e.FirstName)
        </div>
        <label for="FirstName" class="col-sm-3 control-label">نام</label>
    </div>

    <div class="form-group">
        <div class="col-sm-9">
            @Html.PasswordFor(e => e.NewPassword, new { type = "password", @class = "form-control text-left" })
            @Html.ValidationMessageFor(e => e.NewPassword)
        </div>
        <label for="password" class="col-sm-3 control-label">کلمه عبور</label>
    </div>
    <div class="form-group">
        <div class="col-sm-9">
            @Html.PasswordFor(e => e.NewPasswordConfirm, new { type = "password", @class = "form-control text-left" })
            @Html.ValidationMessageFor(e => e.NewPasswordConfirm)
        </div>
        <label for="NewPasswordConfirm" class="col-sm-3 control-label">تایید کلمه عبور</label>
    </div>

    <div class="form-group">
        <div class="col-sm-3 col-sm-push-6">
            @Html.EnumDropDownListFor2(e => e.Sexuality, false, null, new { @class = "form-control" })
            @Html.ValidationMessageFor(e => e.Sexuality)
        </div>
        <label for="Sexuality" class="col-sm-3 col-sm-push-6 control-label">جنسیت</label>
    </div>
    <div class="form-group">
        <div class="col-sm-2 col-sm-push-8">
            <div class="checkbox">
                <label>
                    @Html.CheckBoxFor(e => e.UserHasAdminRole) Admin
                </label>
            </div>
        </div>
        <div class="col-sm-2 col-sm-push-8">
            <div class="checkbox">
                <label>
                    @Html.CheckBoxFor(e => e.UserHasSuperUserRole) SuperUser
                </label>
            </div>
        </div>
    </div>
    <div class="form-group">
        <div class="col-sm-offset-7 col-sm-5">
            <button type="submit" class="btn btn-success">ذخیره</button>
            <button type="button" class="btn btn-danger" data-dismiss="modal">بستن</button>
        </div>
    </div>
}

<script>
    $(function () {
        $("#form").removeData("validator");
        $("#form").removeData("unobtrusiveValidation");
        $.validator.unobtrusive.parse("#form");
    });
</script>